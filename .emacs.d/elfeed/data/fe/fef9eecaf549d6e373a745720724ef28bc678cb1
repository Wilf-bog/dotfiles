
         
         <p>I am working towards the next major release of <code class="language-plaintext highlighter-rouge">denote</code>.  There
already are lots of goodies in the works.  A new one among them is the
global minor mode <code class="language-plaintext highlighter-rouge">denote-rename-buffer-mode</code>.  It automatically
renames the buffer of a Denote file upon visiting the file.  A buffer
is renamed only when visiting the underlying file.  This means that
existing buffers are not renamed until they are visited again in a new
buffer (files are visited with the command <code class="language-plaintext highlighter-rouge">find-file</code> or related).</p>

<p>For example, I enable the mode and then visit a file whose name is
<code class="language-plaintext highlighter-rouge">20230507T084817--software-freedom-and-accessibility__linux_politics.txt</code>.
Normally, that would also be the name of the buffer.  Whereas now the
buffer is called <code class="language-plaintext highlighter-rouge">Software freedom and accessibility</code>.</p>

<p>[ If you are unfamiliar with Denote, consult the comprehensive manual
  or at least watch the video demo I did of its original version.
  Links below. ]</p>

<p>Customize the user option <code class="language-plaintext highlighter-rouge">denote-rename-buffer-function</code> to affect
how buffers are renamed.  Its value must be the symbol of a function.
The default is the <code class="language-plaintext highlighter-rouge">denote-rename-buffer-with-title</code>, with an
alternative of <code class="language-plaintext highlighter-rouge">denote-rename-buffer-with-identifier</code>.</p>

<p>The user option also accepts an arbitrary function.  Refer to the
implementation details of <code class="language-plaintext highlighter-rouge">denote-rename-buffer-with-title</code> or
<code class="language-plaintext highlighter-rouge">denote-rename-buffer-with-identifier</code> for guidance on how to write a
custom function.</p>

<p>Note that renaming a <em>buffer</em> is not the same as renaming a <em>file</em>
(Denote can do both).  The former is just for ease-of-use inside of
Emacs.  Whereas the latter is for writing changes to disk, making them
available to all programs.</p>

<p>I don’t know when I will be able to release version <code class="language-plaintext highlighter-rouge">2.0.0</code>.
Hopefully soon.</p>

<hr />

<p>Denote is a simple note-taking tool for Emacs.  It is based on the idea
that notes should follow a predictable and descriptive file-naming
scheme.  The file name must offer a clear indication of what the note is
about, without reference to any other metadata.  Denote basically
streamlines the creation of such files while providing facilities to
link between them.</p>

<p>Denote’s file-naming scheme is not limited to “notes”.  It can be used
for all types of file, including those that are not editable in Emacs,
such as videos.  Naming files in a consistent way makes their
filtering and retrieval considerably easier.  Denote provides relevant
facilities to rename files, regardless of file type.</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">denote</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/denote">https://protesilaos.com/emacs/denote</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/denote-changelog">https://protesilaos.com/emacs/denote-changelog</a></li>
  <li>Git repo on SourceHut: <a href="https://git.sr.ht/~protesilaos/denote">https://git.sr.ht/~protesilaos/denote</a>
    <ul>
      <li>Mirrors:
        <ul>
          <li>GitHub: <a href="https://github.com/protesilaos/denote">https://github.com/protesilaos/denote</a></li>
          <li>GitLab: <a href="https://gitlab.com/protesilaos/denote">https://gitlab.com/protesilaos/denote</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/denote">https://lists.sr.ht/~protesilaos/denote</a></li>
  <li>Video demo: <a href="https://protesilaos.com/codelog/2022-06-18-denote-demo/">https://protesilaos.com/codelog/2022-06-18-denote-demo/</a></li>
  <li>Backronyms: Denote Everything Neatly; Omit The Excesses.  Don’t Ever
Note Only The Epiphenomenal.</li>
</ul>
        
      