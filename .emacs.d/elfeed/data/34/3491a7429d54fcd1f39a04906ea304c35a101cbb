
	
<p>
I started my first website in 1996 with hand-written HTML. That became a bit of a chore, so for about fifteen years, WordPress became my friend. WordPress has been great to me, but it is slowly becoming a pain to keep updating plugins, security issues, slow performance and the annoying block editor. I am also always looking for additional activities I can do with Emacs. Hugo takes a lot of the pain of managing site away as you can focus on the content and <a href="https://lucidmanager.org/productivity/create-websites-with-org-mode-and-hugo/">Emacs provides me with powerful editing functionality</a>.</p>
<p>
I recently returned to a static website using <a href="https://gohugo.io/">Hugo</a>. This article explains how to export a WordPress blog to Hugo and customise it with R code. The only reason I used R is because it is the only programming language I know well enough.</p>
<p>
You will also need to install the mighty <a href="https://pandoc.org/">Pandoc software</a> to convert the content to Org mode and the <a href="https://wordpress.org/plugins/wp-all-export/">WP All Export</a> WordPress plugin to export your website to a CSV file.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Convert the content to Markdown or Org Mode
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>The first step is to export the WordPress posts database to a CSV file. Several plugins are available that help you with this task. I have used the <a href="https://wordpress.org/plugins/wp-all-export/">WP All Export plugin</a> to export the data. You need to download the ZIP file and install this plugin manually in your WordPress setup. Follow the steps in the All Export plugin and create a CSV file from your posts with at least these fields:</p>
<ul>
<li>Title</li>
<li>Slug</li>
<li>Date</li>
<li>Content</li>
<li>Categories</li>
<li>Tags</li>
</ul>
<p>Alternatively, you can <a href="https://lucidmanager.org/data-science/analyse-site-structure/">link directly to the WordPress database</a> and extract the data with the RMySQL package. </p>
<p>
The content files for Hugo are either Markdown or Org Mode. I prefer to use Org Mode as it provides me with access to the extensive functionality that Emacs has to offer, including <a href="https://opensource.com/article/20/5/r-emacs-data-science">writing and evaluating R code</a>. </p>
<p>
The <code class="verbatim">Content</code> field in the exported CSV file contains HTML code of the article. The code below reads the CSV file and saves each content field as an HTML file, using the post&#39;s slug as the filename. The mighty Pandoc software converts this file to Org mode. Any draft posts or pages in the export file will have <code class="verbatim">NA</code> as the file name and are as such skipped.</p>
<p>
Now that we have some content, we need to add the Org mode front matter so that Hugo can build a site. The last part of the code generates the front matter for each post, prepends it to the exported Org mode file and cleans some entries.</p>
<p>
Copy the code below and save it as <code class="verbatim">wp2org.R</code>. You need to change the filename in the line that starts with <code class="verbatim">file</code> to the name of your export file. The script also creates two subdirectories to store the HTML and Org files.</p>
<p>
You run this code with <code class="verbatim">Rscript wp2org.R</code> from the same directory where the CSV file is stored. The result will be a collection of Org mode files.</p>
<p>
This new site will not be perfect just yet. To show the images, you need to download your <code class="verbatim">wp-content</code> folder and move it to the <code class="verbatim">static/images</code> folder in Hugo.</p>
<p>
The internal links in your blogs will be hard-coded, which means that you need to configure Hugo to ensure your slugs stay the same.</p>
<p>
There will be other bits and pieces that might not have adequately converted, so do check your pages. </p>
<p>
All you have to do now is to add a theme to your website, and your blog is fully converted. The Hugo website has a great <a href="https://gohugo.io/getting-started/quick-start/">Quick Start</a> page that will get you going.</p>
<p>
You can create new posts and edit your content with your favourite text editor. I use <a href="https://lucidmanager.org/productivity/create-websites-with-org-mode-and-hugo/">Org mode in Emacs to develop this website</a>.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
Summary
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>In summary, you need to take the following steps:</p>
<ol>
<li>Install pandoc software and WP All Export WordPress plugin.</li>
<li>Download your website as a <code class="verbatim">CSV</code> file with the WordPress plugin.</li>
<li>Copy the R script in a file called <code class="verbatim">wp2org.R</code> and save it in the same location as the <code class="verbatim">CSV</code> file.</li>
<li>Open your console and move to  the folder with the script and <code class="verbatim">CSV</code> file</li>
<li>Run <code class="verbatim">Rscript wp2org.R</code></li>
<li>Review the Org mode files and clean-up any issues</li>
</ol>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
Script
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<div class="src src-r">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-r" data-lang="r"><span style="display:flex;"><span><span style="color:#888">## Export WP to Hugo</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Read exported WP content</span>
</span></span><span style="display:flex;"><span><span style="color:#06b;font-weight:bold">library</span>(tibble)
</span></span><span style="display:flex;"><span><span style="color:#06b;font-weight:bold">library</span>(readr)
</span></span><span style="display:flex;"><span><span style="color:#06b;font-weight:bold">library</span>(dplyr)
</span></span><span style="display:flex;"><span><span style="color:#06b;font-weight:bold">library</span>(stringr)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Replace the filename with the exported file</span>
</span></span><span style="display:flex;"><span><span style="color:#888"># posts &lt;- read_csv(&#34;Posts-Export-2024-July-14-0149.csv&#34;)</span>
</span></span><span style="display:flex;"><span>posts <span style="color:#333">&lt;-</span> posts<span style="color:#06b;font-weight:bold">[sample</span>(<span style="color:#60e;font-weight:bold">1</span><span style="color:#333">:</span><span style="color:#06b;font-weight:bold">nrow</span>(posts), <span style="color:#60e;font-weight:bold">10</span>), ]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Create subdirectories</span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-weight:bold">if</span> (<span style="color:#333">!</span><span style="color:#06b;font-weight:bold">dir.exists</span>(<span style="background-color:#fff0f0">&#34;tmp&#34;</span>)) <span style="color:#06b;font-weight:bold">dir.create</span>(<span style="background-color:#fff0f0">&#34;tmp&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#080;font-weight:bold">if</span> (<span style="color:#333">!</span><span style="color:#06b;font-weight:bold">dir.exists</span>(<span style="background-color:#fff0f0">&#34;org&#34;</span>)) <span style="color:#06b;font-weight:bold">dir.create</span>(<span style="background-color:#fff0f0">&#34;org&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Read posts</span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-weight:bold">for</span> (i <span style="color:#080;font-weight:bold">in</span> <span style="color:#60e;font-weight:bold">1</span><span style="color:#333">:</span><span style="color:#06b;font-weight:bold">nrow</span>(posts)) {
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Save content as temporary html file</span>
</span></span><span style="display:flex;"><span>    filename <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">paste0</span>(posts<span style="color:#333">$</span>Slug[i], <span style="background-color:#fff0f0">&#34;.html&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#06b;font-weight:bold">writeLines</span>(posts<span style="color:#333">$</span>Content[i], <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;tmp/&#34;</span>, filename))
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Convert to Org mode with Pandoc</span>
</span></span><span style="display:flex;"><span>    pandoc <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;pandoc -o &#34;</span>, <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;org/&#34;</span>, posts<span style="color:#333">$</span>Slug[i],
</span></span><span style="display:flex;"><span>                                          <span style="background-color:#fff0f0">&#34;.org &#34;</span>, <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;tmp/&#34;</span>, filename)))
</span></span><span style="display:flex;"><span>    <span style="color:#06b;font-weight:bold">system</span>(pandoc)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Create front matter for all posts</span>
</span></span><span style="display:flex;"><span>fm <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">tibble</span>(title <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">paste</span>(<span style="background-color:#fff0f0">&#34;#+title:&#34;</span>, posts<span style="color:#333">$</span>Title),
</span></span><span style="display:flex;"><span>             date <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;#+date: [&#34;</span>, <span style="color:#06b;font-weight:bold">as.POSIXct</span>(posts<span style="color:#333">$</span>Date, origin <span style="color:#333">=</span> <span style="background-color:#fff0f0">&#34;1970-01-01&#34;</span>), <span style="background-color:#fff0f0">&#34;]&#34;</span>),
</span></span><span style="display:flex;"><span>             lastmod <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;#+lastmod: [&#34;</span>, <span style="color:#06b;font-weight:bold">Sys.Date</span>(), <span style="background-color:#fff0f0">&#34;]&#34;</span>),
</span></span><span style="display:flex;"><span>             categories <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">paste</span>(<span style="background-color:#fff0f0">&#34;#+categories[]:&#34;</span>, <span style="color:#06b;font-weight:bold">str_replace_all</span>(posts<span style="color:#333">$</span>Categories, <span style="background-color:#fff0f0">&#34; &#34;</span>, <span style="background-color:#fff0f0">&#34;-&#34;</span>)),
</span></span><span style="display:flex;"><span>             tags <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">paste</span>(<span style="background-color:#fff0f0">&#34;#+tags[]:&#34;</span>, <span style="color:#06b;font-weight:bold">str_replace_all</span>(posts<span style="color:#333">$</span>Tags, <span style="background-color:#fff0f0">&#34; &#34;</span>, <span style="background-color:#fff0f0">&#34;-&#34;</span>)),
</span></span><span style="display:flex;"><span>             draft <span style="color:#333">=</span> <span style="background-color:#fff0f0">&#34;#+draft: true&#34;</span>) <span style="color:#333">%&gt;%</span>
</span></span><span style="display:flex;"><span>    <span style="color:#06b;font-weight:bold">mutate</span>(categories <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">str_replace_all</span>(categories, <span style="background-color:#fff0f0">&#34;\\|&#34;</span>, <span style="background-color:#fff0f0">&#34; &#34;</span>),
</span></span><span style="display:flex;"><span>           tags <span style="color:#333">=</span> <span style="color:#06b;font-weight:bold">str_replace_all</span>(tags, <span style="background-color:#fff0f0">&#34;\\|&#34;</span>, <span style="background-color:#fff0f0">&#34; &#34;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#888">## Load Hugo files an prepend front matter</span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-weight:bold">for</span> (f <span style="color:#080;font-weight:bold">in</span> <span style="color:#60e;font-weight:bold">1</span><span style="color:#333">:</span><span style="color:#06b;font-weight:bold">nrow</span>(posts)) {
</span></span><span style="display:flex;"><span>    filename <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;org/&#34;</span>, posts<span style="color:#333">$</span>Slug[f], <span style="background-color:#fff0f0">&#34;.org&#34;</span>)
</span></span><span style="display:flex;"><span>    post <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">c</span>(<span style="color:#06b;font-weight:bold">paste</span>(fm[f, ]), <span style="background-color:#fff0f0">&#34;&#34;</span>, <span style="color:#06b;font-weight:bold">readLines</span>(filename))
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Repoint images</span>
</span></span><span style="display:flex;"><span>    post <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">str_replace_all</span>(post, <span style="color:#06b;font-weight:bold">paste0</span>(<span style="background-color:#fff0f0">&#34;http.*wp-content&#34;</span>), <span style="background-color:#fff0f0">&#34;/images&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Cleanup LaTeX</span>
</span></span><span style="display:flex;"><span>    post <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">str_replace_all</span>(post, <span style="background-color:#fff0f0">&#34;\\$latex &#34;</span>, <span style="background-color:#fff0f0">&#34;$&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Remove remaining Wordpress artefacts</span>
</span></span><span style="display:flex;"><span>    post <span style="color:#333">&lt;-</span> <span style="color:#06b;font-weight:bold">str_remove_all</span>(post, <span style="background-color:#fff0f0">&#39;:::|\\{.wp.*|.*\\&#34;\\}&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#888">## Write to disk</span>
</span></span><span style="display:flex;"><span>    <span style="color:#06b;font-weight:bold">writeLines</span>(post, filename)
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
</div>
<p>
<a href = "https://www.r-bloggers.com/" target="_blank" title="Proudly associated with R-Bloggers">
  <button class="button is-link is-medium">
    <span class="icon is-large">
      <i class="fab fa-r-project"></i>
    </span>
    <span>As seen on R Bloggers</span>
  </button>
</a>
</p>
</div>
</div>

      