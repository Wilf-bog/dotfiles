
	
<p>
Commercial software is usually good at doing one thing really well. You write documents in LibreOffice Writer or Google Docs. You create presentation slides in PowerPoint or Keynote and manage tasks with Trello or Todoist. If you are lucky, the developers let you change the configuration to customise the software’s behaviour and optimise your workflow. In most cases, however, you are bound by the choices the developers have made for you. Linking the information that is held in these programs can be problematic.</p>
<p>
Emacs does not have such limitations. You do almost all tasks in one program, but you have to configure it to make it behave the way you want. This article explains how to configure Emacs to transform it into a personalised productivity suite for authors. Please note that this configuration assumes that you are using the latest version of Emacs, which at the time of writing is 29.2.</p>
<p>
This article is part of <a href="https://lucidmanager.org/tags/emacs/">Emacs Writing Studio</a> which explains how to use Emacs to undertake research and write and publish articles, books, and websites. You can find the latest configuration files on GitHub:</p>
<p>
<a href = "https://github.com/pprevos/emacs-writing-studio/" target="_blank"
   title="Download emacs-writing-studio from GitHub"
   alt="Download emacs-writing-studio from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span style="font-family: monospace">emacs-writing-studio</span>
  </button>
</a>

</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Configuring Emacs
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>A vanilla version of Emacs has a lot of functionality out of the box and you could easily write a book without any configuration. But to truly leverage its capabilities, Emacs needs external packages and additional configuration.</p>
<p>
Some Emacs users use pre-configured systems, such as <a href="https://github.com/hlissner/doom-emacs">Doom Emacs</a>,  or <a href="https://github.com/syl20bnr/spacemacs/tree/develop">Spacemacs</a>, or one of the other <a href="https://www.emacswiki.org/emacs/StarterKits">starter kits</a>. While these configurations are helpful, they sometimes provide ‘everything but the kitchen sink’.</p>
<p>
On the other side of the spectrum, you can configure your system from scratch, which can become a productivity sink as you wade your way through highly technical instructions written by experts.</p>
<p>
<em>Emacs Writing Studio</em> (EWS) seeks the golden mean by providing a minimal configuration. The main objective of EWS is to get you started writing in Emacs and generate sufficient curiosity for you to further develop your skills and keep improving your configuration.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
The Initialisation File
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>When you start Emacs, it loads the <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html">initialisation file</a>, or init file in short. This file contains Lisp code that configures Emacs and loads additional packages. </p>
<p>
The first time you start Emacs, it will create the configuration directory. The init file lives in this location, which will also contain the packages and other files needed to personalise your system.</p>
<p>
Emacs looks for a file called <code class="verbatim">.emacs</code>, <code class="verbatim">.emacs.el</code> or <code class="verbatim">init.el</code>. The dot in front of the file means that it is hidden from view to prevent cluttering your directories. The location of the configuration folder depends on your operating system and Emacs version. The Emacs help functionality can tell you where to store the <code class="verbatim">init.el</code> file.</p>
<p>
Type <code class="verbatim">C-h v</code> (<code>describe-variable</code>), and type <code class="verbatim">user-emacs-directory</code> and <code class="verbatim">ENTER</code> (or <code class="verbatim">user-e TAB ENTER</code>) in the minibuffer at the bottom of the screen. The help buffer that now appears provides the correct folder name, for example &#34;<code class="verbatim">Its value is &#34;~/.config/emacs/</code>&#34;.</p>
<p>
You can now visit (open or create) the <code class="verbatim">init.el</code> file in your Emacs directory and copy and write your configuration. Your init file will become active after you restart Emacs (use <code>M-x restart-emacs</code>). You can also download the complete EWS configuration file from GitHub and save it in the user directory.</p>
<p>
<a href = "https://github.com/pprevos/emacs-writing-studio/" target="_blank"
   title="Download emacs-writing-studio from GitHub"
   alt="Download emacs-writing-studio from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span style="font-family: monospace">emacs-writing-studio</span>
  </button>
</a>

</p>
<p>
Please note that when you start Emacs with the <em>Emacs Writing Studio</em> configuration for the first time, Emacs will download several packages from their online repositories and compile them. This process might generate scary-looking text, but you can ignore it, as it only appears when you install new packages.</p>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
Emacs Lisp
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<p>While using commercial software is like renting a fully furnished house, using Emacs is more like buying a new empty house. Your new digital home needs some paint and new carpets, which means you need to configure Emacs to make it your digital home.</p>
<p>
Commercial software provides graphical menus to define how the software operates. Like the examples below, you might tick a box, select an item in a list, or enter a value in a text box to configure the program to your wishes. </p>
<figure>
<div class= "tile is-ancestor">
  <div class="tile is-12 is-horizontal is-parent" style= "text-align: center; border-style: ridge; border-color: lightgray;">
    <div class= "tile is-child box">
      <div class="field">
	<label class="label">Inhibit startup message</label>
	<div class="control" style="text-align: center;">
	  <label class="checkbox">
	    <input type="checkbox" name="question" checked>
	  </label>
	</div>
      </div>
    </div>
    <div class= "tile is-child box">
      <div class="field">
	<label class="label">Initial scratch message</label>
        <textarea class="textarea" rows="2" placeholder="Hello world"></textarea>
      </div>
    </div>
    <div class= "tile is-child box">
      <div class="field">
	<label class="label">Cursor Type</label>
	<div class="select">
	  <select name="color">
	    <option value="nil">Nil</option>
	    <option value="box">Box</option>
	    <option value="hollow">Hollow</option>
	    <option selected value="bar">Bar</option>
	  </select>
	</div>
      </div>
    </div>
  </div>
</div>
<figcaption>
Typical graphical configuration screen.
</figcaption>
</figure>
<p>
Being a plain text program, Emacs doesn&#39;t use a graphical interface but a programming language called Lisp. The code below is equivalent to the graphical user interface shown above. </p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  (<span style="color:#007020">setq-default</span> <span style="color:#963">inhibit-startup-message</span> <span style="color:#036;font-weight:bold">t</span>
</span></span><span style="display:flex;"><span>                <span style="color:#963">initial-scratch-message</span> <span style="background-color:#fff0f0">&#34;Hello world&#34;</span>
</span></span><span style="display:flex;"><span>                <span style="color:#963">cursor-type</span> <span style="color:#a60;background-color:#fff0f0">&#39;bar</span>)</span></span></code></pre></div>
</div>
<p>
Although the text-based method is superficially more complex than ticking boxes, writing text and selecting a drop-down list, it is far more potent than a graphical interface.  Writing code to configure your computer may not seem user-friendly initially because we are used to the graphical interface. However, once you learn how to write simple Emacs Lisp programs, you will find that Emacs is the most user-friendly system because it gives you so much power over your computer. But with that power comes great responsibility and a steep learning curve.</p>
<blockquote>
<p>Using Emacs Lisp is the epitome of ease of use. You control how your computer behaves instead of the computer controlling your behaviour.</p>
</blockquote>
<p>
A Lisp program consists of expressions, which are statements enclosed in parentheses. Each expression starts with the name of a function (<code class="verbatim">setq-default</code>), followed by some parameters.</p>
<p>
The <code class="verbatim">setq-default</code> function is commonly used to set the default value of a parameter. For example, <code class="verbatim">(setq-default inhibit-startup-message t)</code> has the same effect as putting a checkmark in the inhibit-startup-message box, while <code class="verbatim">inhibit-startup-message nil</code> is the same as removing the checkmark in that box. The expression in this example determines whether Emacs displays a startup message when you open it for the first time.</p>
<p>
You don’t have to learn to program Lisp to configure Emacs. The examples on this site provide sensible defaults to turn vanilla Emacs into your personal writing studio. Each article offers a thoroughly documented configuration. Many Emacs users share their configuration with the community so that you can copy their code. The copy-and-paste method is a shortcut to learning more about Emacs Lisp because you can change the settings and examine the results of your changes.</p>
</div>
</div>
<div id="outline-container-headline-4" class="outline-2">
<h2 id="headline-4">
The Emacs Writing Studio Configuration
</h2>
<div id="outline-text-headline-4" class="outline-text-2">
<div id="outline-container-headline-5" class="outline-3">
<h3 id="headline-5">
Checking external software requirements
</h3>
<div id="outline-text-headline-5" class="outline-text-3">
<p>Emacs is not just a text editor but a Lisp computing environment that can interface with command line tools. For <em>Emacs Wring Studio</em> to function fully, it needs to have access to a bunch of external programs, which are listed in the relevant articles. </p>
<p>
A bespoke <em>Emacs Writing Studio</em> function tests wether the relevant external executable files are available. This function displays an error message into the <code class="verbatim">*Messages*</code> buffer if it cannot find one or more of the external tools. Emacs will still work, but some functionality might be unavailable.</p>
<p>
Each article in the Emacs Writing Studio series explains which external software is required an how to obtain it.</p>
&nbsp;
</div>
</div>
<div id="outline-container-headline-6" class="outline-3">
<h3 id="headline-6">
Loading Packages
</h3>
<div id="outline-text-headline-6" class="outline-text-3">
<p>The Emacs base system has extensive functionality, but you can extend its capability with external packages. Many people write packages in Emacs Lisp to improve or enhance what the system can do. You can also download Lisp files directly from GitHub or other sources. Developers of these packages often share their work through public package repositories, which are websites that let you easily download and install packages. The two most important ones are:</p>
<ul>
<li>ELPA: <a href="https://elpa.gnu.org/">GNU Emacs Lisp Package Archive</a> — the official package archive, enabled by default.</li>
<li>MELPA: <a href="https://melpa.org/">Milkypostman’s Emacs Lisp Package Archive</a> — Unofficial archive.</li>
</ul>
<p>The next blob of Elisp (Emacs Lisp) code adds the MELPA archive to the packages archive list. The ELPA archive is installed by default. This code appends the configuration (<code>add-to-list</code>) and does not override the default. Just ensure you add a trailing slash (at the end of the URL), otherwise, Emacs gets confused when downloading the package index.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Set package archives</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">package</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:config</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#963">add-to-list</span> <span style="color:#a60;background-color:#fff0f0">&#39;package-archives</span>
</span></span><span style="display:flex;"><span>                 <span style="color:#333">&#39;</span>(<span style="background-color:#fff0f0">&#34;melpa&#34;</span> <span style="color:#333">.</span> <span style="background-color:#fff0f0">&#34;https://melpa.org/packages/&#34;</span>))
</span></span><span style="display:flex;"><span>    (<span style="color:#963">package-initialize</span>))</span></span></code></pre></div>
</div>
<p>
You can explore the list of packages with the <code class="verbatim">list-packages</code> function. This function has no keyboard shortcut, so first press <code class="verbatim">M-x</code> and type the function name, followed by the <code class="verbatim">ENTER</code> key.</p>
&nbsp;
</div>
</div>
<div id="outline-container-headline-7" class="outline-3">
<h3 id="headline-7">
Configuring Packages
</h3>
<div id="outline-text-headline-7" class="outline-text-3">
<p>John Wiggle has developed the <code class="verbatim">use-package</code> software, which simplifies configuring packages. Computer scientists call this approach ‘syntactic sugar’ because it makes the syntax of a configuration file a bit easier to read and write. Most configurations on this website use this method to install and configure Emacs extensions.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Package Management</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#007020">use-package</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:custom</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#963">use-package-always-ensure</span> <span style="color:#036;font-weight:bold">t</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#963">package-native-compile</span> <span style="color:#036;font-weight:bold">t</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#963">warning-minimum-level</span> <span style="color:#007020">:error</span>))</span></span></code></pre></div>
</div>
<p>
This is the basic setup required to run any other configurations in this series of articles.</p>
&nbsp;
</div>
</div>
<div id="outline-container-headline-8" class="outline-3">
<h3 id="headline-8">
Keeping your packages up-to-date
</h3>
<div id="outline-text-headline-8" class="outline-text-3">
<p>Packages are constantly updated by their developers. To ensure you get the latest version, you can use the <code class="verbatim">package-upgrade-all</code> function, which has no default keybinding. This might seem a strange name for this function, <code class="verbatim">upgrade-all-packages</code> would seem a bit more linguistically sound. However, the convention for naming Emacs Lisp functions is that the first word is the package name, which is <code class="verbatim">package</code>. So, for example, all <em>Emacs Writing Studio</em> functions start with <code class="verbatim">ews-</code>.</p>
&nbsp;
</div>
</div>
<div id="outline-container-headline-9" class="outline-3">
<h3 id="headline-9">
Changing keyboard shortcuts
</h3>
<div id="outline-text-headline-9" class="outline-text-3">
<p>The <a href="https://lucidmanager.org/productivity/getting-started-with-emacs/">previous article</a> explained how Emacs uses the keyboard and the use of shortcuts to run functions. Emacs comes with a lot of default key bindings, all of which you can change or you can add new ones for functions you need to use regularly that don&#39;t have a default shortcut.</p>
<p>
For example, adding this line to your configuration lets you play Tetris whenever you hit <code class="verbatim">F8</code>.  So this line associates the keyboard shortcut <code>(kbd &#34;&lt;f8&gt;&#34;)</code> in the global keymap with the <code>tetris</code> function.</p>
<div class="src src-elisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-elisp" data-lang="elisp"><span style="display:flex;"><span>(<span style="color:#963">keymap-set</span> <span style="color:#963">global-map</span> <span style="background-color:#fff0f0">&#34;&lt;f8&gt;&#34;</span> <span style="color:#06b;font-weight:bold">#&#39;</span><span style="color:#963">test-command</span>)</span></span></code></pre></div>
</div>
<p>
EWS deploys the <code class="verbatim">use-package</code> configuration, which has a slightly different convention. You can as such change any of the keyboard shortcuts in this EWS configuration to your preference by simply changing the bit between quotation marks. Please note that function keys and other special keys are between <code class="verbatim">&lt;&gt;</code> to prevent them being interpreted as individual keys.</p>
<div class="src src-elisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-elisp" data-lang="elisp"><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">emacs</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:bind</span> (<span style="background-color:#fff0f0">&#34;&lt;f8&gt;&#34;</span> <span style="color:#333">.</span> <span style="color:#963">tetris</span>))</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-headline-10" class="outline-2">
<h2 id="headline-10">
Emacs Writing Studio configuration
</h2>
<div id="outline-text-headline-10" class="outline-text-2">
<p>Besides crafting your own configuration or using a starter kit, Emacs has a customisation menu that lets you configure Emacs without writing code. This system writes the required Emacs Lisp code to the init file.</p>
<p>
<em>Emacs Wring Studio</em> uses two separate init files to prevent Emacs from changing your hand-crafted config. The configuration below changes the automated configuration file’s name to <code class="verbatim">custom.el</code> and evaluates it when it exists.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Custom settings in a separate file and load the custom settings</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">setq-default</span> <span style="color:#963">custom-file</span>
</span></span><span style="display:flex;"><span>                (<span style="color:#06b;font-weight:bold">expand-file-name</span> <span style="background-color:#fff0f0">&#34;custom.el&#34;</span> <span style="color:#963">user-emacs-directory</span>))
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">when</span> (<span style="color:#06b;font-weight:bold">file-exists-p</span> <span style="color:#963">custom-file</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">load</span> <span style="color:#963">custom-file</span>))</span></span></code></pre></div>
</div>
<p>
The first lines of code instruct Emacs to use a separate file for the internal configuration system (<code class="verbatim">custom.el</code>). The <code class="verbatim">expand-file-name</code> expression adds the filename to the location of the Emacs user directory. This method ensures the code works irrespective of the Emacs user directory location.</p>
<p>
The last two lines load this file when it exists (<code class="verbatim">file-exists-p</code>). As this is the first action in the configuration, your personal init file will override any settings in the custom file.</p>
&nbsp;
<div id="outline-container-headline-11" class="outline-3">
<h3 id="headline-11">
Emacs Writing Studio Variables and functions
</h3>
<div id="outline-text-headline-11" class="outline-text-3">
<p>For convenience, the <em>Emacs Writing Studio</em> defines some variables to configure other packages. Using a variable ensures consistency in the folder structure. The <code>ews-documents-directory</code> variable holds the path of the directory where you keep, you guessed it, your documents. The <code>(getenv “HOME”)</code> expression determines the location of your home folder on your computer system, which varies with user name and operating system. </p>
<p>
The text between quotation marks explains the purpose of each variable .</p>
<div class="src src-elisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-elisp" data-lang="elisp"><span style="display:flex;"><span>  <span style="color:#888">;; Emacs Writing Studio Customisation</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defgroup</span> <span style="color:#963">ews</span> ()
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Emacs Writing Studio.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;files</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:link</span> <span style="color:#333">&#39;</span>(<span style="color:#963">url-link</span> <span style="color:#007020">:tag</span> <span style="background-color:#fff0f0">&#34;Homepage&#34;</span> <span style="background-color:#fff0f0">&#34;https://lucidmanager.org/tags/emacs/&#34;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-documents-directory</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> (<span style="color:#963">getenv</span> <span style="background-color:#fff0f0">&#34;HOME&#34;</span>)) <span style="background-color:#fff0f0">&#34;Documents&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of documents.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;directory</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-bibliography-directory</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> <span style="color:#963">ews-documents-directory</span>) <span style="background-color:#fff0f0">&#34;library&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of BibTeX bibliographies and attachments.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;directory</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-notes-directory</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> <span style="color:#963">ews-documents-directory</span>) <span style="background-color:#fff0f0">&#34;notes&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of notes.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;directory</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-music-directory</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> (<span style="color:#963">getenv</span> <span style="background-color:#fff0f0">&#34;HOME&#34;</span>)) <span style="background-color:#fff0f0">&#34;Music&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of music files.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;directory</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-inbox-file</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> <span style="color:#963">ews-documents-directory</span>) <span style="background-color:#fff0f0">&#34;inbox.org&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of notes.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;file</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-elfeed-config-file</span>
</span></span><span style="display:flex;"><span>        (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> <span style="color:#963">ews-documents-directory</span>) <span style="background-color:#fff0f0">&#34;elfeed.org&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of RSS feed configuration.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;file</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">defcustom</span> <span style="color:#963">ews-todo-file</span>
</span></span><span style="display:flex;"><span>        (<span style="color:#06b;font-weight:bold">concat</span> (<span style="color:#06b;font-weight:bold">file-name-as-directory</span> <span style="color:#963">ews-documents-directory</span>) <span style="background-color:#fff0f0">&#34;todo.org&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="background-color:#fff0f0">&#34;Location of todo lists.&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:group</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:type</span> <span style="color:#a60;background-color:#fff0f0">&#39;file</span>)</span></span></code></pre></div>
</div>
<p>
You can change these variables with the <code>customize-variable</code> function, search for <code class="verbatim">ews</code>, and pick the variable you seek to change. Alternatively, use <code>customize-group</code> and search for <code class="verbatim">ews</code> to see all variables. You can then change the entry in the text field to your preference and hit the <code class="verbatim">Apply and save</code> button. Emacs saves the new value(s) to the <code class="verbatim">custom.el</code> file and they will be loaded next time you start Emacs.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/customisation-menu.png" alt="Emacs customisation screen" title="Emacs customisation screen" width="600"/>
<figcaption>
Emacs customisation screen.
</figcaption>
</figure>
<p>
The Emacs customisation functionality is a low-code option to configure your system and the <em>Emacs Writing Studio</em> is configured so that the variables set with this method will override the default configuration presented in these pages. Alternatively you can of course hack your init file directly.</p>
<p>
<em>Emacs Writing Studio</em> also includes a handful of bespoke convenience functions, which are discussed in their relevant pages. All bespoke configuration is stored in the <code class="verbatim">ews.el</code> file on GitHub. The <code class="verbatim">init.el</code> file installs this file as an external package.</p>
<div class="src src-elisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-elisp" data-lang="elisp"><span style="display:flex;"><span>  (<span style="color:#007020">unless</span> (<span style="color:#963">package-installed-p</span> <span style="color:#a60;background-color:#fff0f0">&#39;ews</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#963">package-vc-install</span>
</span></span><span style="display:flex;"><span>     <span style="color:#333">&#39;</span>(<span style="color:#963">ews</span>
</span></span><span style="display:flex;"><span>       <span style="color:#007020">:url</span> <span style="background-color:#fff0f0">&#34;https://github.com/pprevos/emacs-writing-studio/&#34;</span>)))</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-headline-12" class="outline-2">
<h2 id="headline-12">
Is Emacs a Productivity Sink?
</h2>
<div id="outline-text-headline-12" class="outline-text-2">
<p>Configuring Emacs can be a daunting task and become a productivity sink because of the ease by which it can be done. Within the Emacs community, a discussion emerges every now and then about the need to make so many changes to the vanilla software to get it to behave how you like it.</p>
<p>
A commonly asked question is why can&#39;t Emacs have &#39;sensible default&#39; values? This may seem like a reasonable question, but what is sensible to one user is an annoyance for another. Emacs developers are as such quite conservative when it comes to changing the default settings.</p>
<p>
The Emacs developers cannot cater to every personal preference, so they provide a skeleton system you must enhance to suit your workflow. Emacs Lisp is like a box of Lego. You can play with it out of the box using vanilla Emacs, but it is much more fun when you create your own toys. Working on your Emacs configuration is like building with Lego and eventually you configure Emacs to perfectly meet your needs.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/emacs-configuration-lego.jpg" alt="Emacs configuration and Lego" title="Emacs configuration and Lego" width="600"/>
<figcaption>
Emacs configuration and Lego.
</figcaption>
</figure>
<p>
It can be tempting to constantly fine-tune your configuration. Wielding the power to create a bespoke Emacs system is a temptation that can lead to fake productivity, which is one of the three forms of procrastination:</p>
<ol>
<li><em>Nihilistic procrastination</em>: Watching TV or playing computer games.</li>
<li><em>Sophisticated procrastination</em>: Fake productivity, e.g. Emacs hacking, switching productivity tools, taking notes for volume instead of quality.</li>
<li><em>Productive procrastination</em>: Daydreaming.</li>
</ol>
<p>Tinkering with your Emacs configuration is not as bad as nihilistic procrastination but can become a form of fake productivity. The productivity gains from fine-tuning your Emacs to cut out a few keystrokes can take more time than you will save with your new workflow. Writing is more than the number of words you can type into your buffer. Writing is as much a contemplative act as it is about productivity. Don’t get sucked into trying as many packages as possible. It will lead to what Emacs aficionados call Dot Emacs bankruptcy, which occurs when your init file is so enormous and disorganised that it becomes unmanageable.</p>
<p>
The best way to learn how to configure your Emacs system is to search the web for examples and copy them to your init file. Initially, the code might look gibberish, but its logic will become more apparent as you do this more often. Emacs has an extensive help system that you can use to explore functions or variables you like to know more about. Use <code class="verbatim">C-h o</code> (<code>describe-symbol</code>) to search for any function or variable.</p>
<figure>
<img src="https://imgs.xkcd.com/comics/is_it_worth_the_time.png" alt="https://imgs.xkcd.com/comics/is_it_worth_the_time.png" title="https://imgs.xkcd.com/comics/is_it_worth_the_time.png" /><figcaption>
Source: xbd.com
</figcaption>
</figure>
<p>
Hopefully, the <em>Emacs Writing Studio</em> configuration will help you reduce the time it takes to configure Emacs to suit your preferred workflow.</p>
<p>
Raoul Comninos from Emacs Elements refers to the urge to keep tinkering with your Emacs configuration <em>tweak-o-mania</em>, which he reflects on in a little video essay.</p>
<figure>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pQYBtMw2x5Q?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<figcaption>
Avoiding the Ovsiankina effect: Tweakomania in Emacs.
</figcaption>
</figure>
</div>
</div>
<div id="outline-container-headline-13" class="outline-2">
<h2 id="headline-13">
Emacs Writing Studio
</h2>
<div id="outline-text-headline-13" class="outline-text-2">
<p><a href="https://lucidmanager.org/tags/emacs/">Emacs Writing Studio</a> consists of a series articles and a configuration to help you publish articles, books, movie and theatre scripts and websites. You can find the latest configuration files on GitHub:</p>
<p>
<a href = "https://github.com/pprevos/emacs-writing-studio/" target="_blank"
   title="Download emacs-writing-studio from GitHub"
   alt="Download emacs-writing-studio from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span style="font-family: monospace">emacs-writing-studio</span>
  </button>
</a>

</p>
<p>
Emacs is a malleable system, so everybody will have their personal preferences. Any article on how to use Emacs is thus opinionated. If you have a different way of doing things, please complete the <a href="https://lucidmanager.org/contact/">contact form</a> to send me an email or contact me on social media.</p>
<p>
The next article explains the principles of <a href="https://lucidmanager.org/productivity/writing-prose-with-emacs/">writing prose in Emacs</a>.</p>
</div>
</div>

      