
         
         <p>Fontaine allows the user to define detailed font configurations and set
them on demand.  For example, one can have a <code class="language-plaintext highlighter-rouge">regular-editing</code> preset
and another for <code class="language-plaintext highlighter-rouge">presentation-mode</code> (these are arbitrary, user-defined
symbols): the former uses small fonts which are optimised for writing,
while the latter applies typefaces that are pleasant to read at
comfortable point sizes.</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">fontaine</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/fontaine">https://protesilaos.com/emacs/fontaine</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/fontaine-changelog">https://protesilaos.com/emacs/fontaine-changelog</a></li>
  <li>Git repositories:
    <ul>
      <li>GitHub: <a href="https://github.com/protesilaos/fontaine">https://github.com/protesilaos/fontaine</a></li>
      <li>GitLab: <a href="https://gitlab.com/protesilaos/fontaine">https://gitlab.com/protesilaos/fontaine</a></li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/fontaine">https://lists.sr.ht/~protesilaos/fontaine</a></li>
  <li>Backronym: Fonts, Ornaments, and Neat Typography Are Irrelevant in Non-graphical Emacs.</li>
</ul>

<hr />

<h2>Control the fonts of more faces</h2>

<p>This version brings a major expansion to the scope of the user option
<code class="language-plaintext highlighter-rouge">fontaine-presets</code>. It can now control the font family and concomitant
attributes of more Emacs faces. In particular, it covers the following
additional faces:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">mode-line-active</code> and <code class="language-plaintext highlighter-rouge">mode-line-inactive</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">header-line</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">line-number</code> (from the <code class="language-plaintext highlighter-rouge">display-line-numbers-mode</code> or its global variant).</li>
  <li><code class="language-plaintext highlighter-rouge">tab-bar</code> (from the <code class="language-plaintext highlighter-rouge">tab-bar-mode</code>).</li>
  <li><code class="language-plaintext highlighter-rouge">tab-line</code> (from the <code class="language-plaintext highlighter-rouge">tab-line-mode</code>).</li>
</ul>

<p>All the supported faces are stored as the value of the variable
<code class="language-plaintext highlighter-rouge">fontaine-faces</code>. This is the complete list:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">default</code></li>
  <li><code class="language-plaintext highlighter-rouge">fixed-pitch</code></li>
  <li><code class="language-plaintext highlighter-rouge">fixed-pitch-serif</code></li>
  <li><code class="language-plaintext highlighter-rouge">variable-pitch</code></li>
  <li><code class="language-plaintext highlighter-rouge">mode-line-active</code></li>
  <li><code class="language-plaintext highlighter-rouge">mode-line-inactive</code></li>
  <li><code class="language-plaintext highlighter-rouge">line-number</code></li>
  <li><code class="language-plaintext highlighter-rouge">tab-bar</code></li>
  <li><code class="language-plaintext highlighter-rouge">tab-line</code></li>
  <li><code class="language-plaintext highlighter-rouge">bold</code></li>
  <li><code class="language-plaintext highlighter-rouge">italic</code></li>
</ul>

<p>Existing users do not need to update their configuration, as (i) the old
values will still work and (ii) undefined values fall back to reliable
known values.</p>

<p>This change empowers users to further configure their setup, such as:</p>

<ul>
  <li>Make the mode lines smaller than the main text.</li>
  <li>Use a proportionately spaced font for the tabs, while retaining a
monospaced font for editing.</li>
  <li>Use a different font family for line numbers to differentiate them
from the main body of text.</li>
</ul>

<p>These are some possibilities. Then consider that different presets can
change specify different configurations. For example, a <code class="language-plaintext highlighter-rouge">coding</code>
preset can be all about small, monospaced fonts, while a <code class="language-plaintext highlighter-rouge">reading</code>
preset may increase the font sizes and apply proportionately spaced
fonts.</p>

<p>The doc string of <code class="language-plaintext highlighter-rouge">fontaine-presets</code> covers the technicalities, as
does the official manual (shipped with the package or available on my
website: <a href="https://protesilaos.com/emacs/fontaine">https://protesilaos.com/emacs/fontaine</a>).</p>

<p>Thanks to Ashlin Eldridge for suggesting the inclusion of mode line
and line number faces. This was done in issue 4:
<a href="https://github.com/protesilaos/fontaine/issues/4">https://github.com/protesilaos/fontaine/issues/4</a>.</p>

<h2>Use the <code class="language-plaintext highlighter-rouge">fontaine-mode</code> to persist presets</h2>

<p>The new <code class="language-plaintext highlighter-rouge">fontaine-mode</code> provides a convenience toggle to do the
following:</p>

<ol>
  <li>Store the current Fontaine preset before closing Emacs.</li>
  <li>Store the latest preset after using the command <code class="language-plaintext highlighter-rouge">fontaine-set-preset</code>.</li>
  <li>Persist font configurations while changing themes.</li>
</ol>

<p>The purpose of storing the latest preset is to restore it easily, such
as when starting Emacs. In the manual, we mention this in the sample
configuration:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Set the last preset or fall back to desired style from `fontaine-presets'</span>
<span class="c1">;; (the `regular' in this case).</span>
<span class="p">(</span><span class="nv">fontaine-set-preset</span> <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nv">fontaine-restore-latest-preset</span><span class="p">)</span> <span class="ss">'regular</span><span class="p">))</span>
</code></pre></div></div>

<p>This takes effect while starting up Emacs. So if, say, the user had
selected a <code class="language-plaintext highlighter-rouge">reading</code> preset with <code class="language-plaintext highlighter-rouge">fontaine-set-preset</code> and then closed
Emacs while <code class="language-plaintext highlighter-rouge">fontaine-mode</code> was enabled, the <code class="language-plaintext highlighter-rouge">reading</code> preset will be
restored on startup.</p>

<p>Thanks to Adam Porter (alphapapa) for suggesting this in issue 2:
<a href="https://github.com/protesilaos/fontaine/issues/2">https://github.com/protesilaos/fontaine/issues/2</a>.</p>

<p>We used to provide code in the sample configuration which was doing
what <code class="language-plaintext highlighter-rouge">fontaine-mode</code> does, though this is easier to set up (plus it is
a toggle).</p>

<h2>Deprecated the command <code class="language-plaintext highlighter-rouge">fontaine-set-face-font</code></h2>

<p>This command was used to interactively set the attributes of a face.
It was not consistent with the rest of Fontaine’s functionality, plus
it was not faster than setting face attributes directly from Lisp
(such as to test them, while experimenting in the <code class="language-plaintext highlighter-rouge">*scratch*</code> buffer).</p>

<h2>The <code class="language-plaintext highlighter-rouge">fontaine-set-preset-hook</code> provides more options</h2>

<p>The functions added to this hook are called after <code class="language-plaintext highlighter-rouge">fontaine-set-preset</code>.
For example, users of my <code class="language-plaintext highlighter-rouge">pulsar</code> package can highlight the current
line to not lose track of the cursor:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">'fontaine-set-preset-hook</span> <span class="nf">#'</span><span class="nv">pulsar-pulse-line</span><span class="p">)</span>
</code></pre></div></div>

<p>I had thought about defining what Emacs terms “abnormal hooks”, which
are hooks that pass arguments to their functions. This hook would pass
the selected preset, but I ultimately opted for the normal hook that
run their functions without arguments. If advanced users have a good
reason for such a feature, they are welcome to discuss it with me.</p>

<h2>Fontaine now works with Emacs 29+</h2>

<p>Emacs 29 is the current stable version and has been out for almost a
year now. I do not have the resources to test/support older versions,
sorry!</p>

<h2>Miscellaneous</h2>

<ul>
  <li>Updated the manual in light of all the aforementioned.</li>
  <li>Simplified large parts of the code base.</li>
</ul>
        
      