
	
<p>
Emacs has a reputation for being hard to use. This article crushes that myth and describes getting started with Emacs without any configuration. Once you understand the basic principles, you will soon play the software like a virtuoso plays the piano.</p>
<p>
Emacs will take some getting used to because the first version of the software was released almost forty years ago. Although Emacs is one of the oldest continuously developed software packages, it has evolved into a versatile contemporary computing system. But, just like biological organisms have vestigial features that originated in the distant past, Emacs also has some quirky features and terminology that stem from its long history. This article guides you through the basics of using Emacs to get you started by explaining the principles.</p>
<p>
This article is part of the <a href="https://lucidmanager.org/tags/emacs/">Emacs Writing Studio</a>, which explains how to use Emacs to undertake research and write and publish articles, books, and websites.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Installing Emacs
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>The Emacs computing environment works on almost all operating systems, and best integrates with GNU / Linux. You can install it on your distribution with the relevant package manager. I use the <a href="https://endeavouros.com/">EndeavourOS distribution</a> with the <a href="https://i3wm.org/">i3wm tiling window manager</a>, which provides a seamless experience when working with Emacs. If you use another OS, follow the links below:</p>
<ul>
<li><a href="https://lucidmanager.org/productivity/emacs-windows/">Windows</a></li>
<li><a href="https://lucidmanager.org/productivity/emacs-chromebook/">Chromebook</a></li>
<li><a href="http://brew.sh/">Apple</a></li>
</ul>
<p>This video by Marcus Birkenkrahe provides a succinct overview of installing Emacs on Windows or MacOS.</p>
<p>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/maNgdDV7cIA?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>
</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
Getting Started with Emacs
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>Now that you have cleared the first hurdle, it is time to open Emacs and look around. When you first start Emacs, you see a splash screen with links to help files. Click on the link to read the tutorial, or press the <code class="verbatim">q</code> button to remove the screen and keep reading this article.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/emacs-splash-screen.png" alt="The Emacs splash screen." title="The Emacs splash screen." width="500"/>
<figcaption>
The Emacs splash screen (Emacs 29.1).
</figcaption>
</figure>
<p>
Pressing <code class="verbatim">q</code> is the standard method to close (kill) read-only screens in Emacs. When the splash screen closes, you enter the ’scratch buffer’, which you can use for temporary notes. Emacs does not save the content of the scratch buffer, so don’t start writing your dissertation just yet.</p>
<p>
Emacs has a mouse-driven menu system, with drop-down menus on the top of the screen. Most users ignore this convenience and rely on keyboard-driven instructions. There is no real agreement on whether using a keyboard or a mouse is most efficient. What is clear is that regularly moving your hands between the keyboard and the mouse can be annoying and impede your workflow. When you misspell a word in most software, you move your hand from the keyboard to the mouse, click on the offending word and select the desired spelling. In Emacs, you use one keystroke and the misspelled word automatically changes to the most likely correct version, and you keep on writing.</p>
<p>
One advantage of the menu system is that it helps discovering functionality in Emacs, but you don&#39;t need a mouse for this. Just press <code class="verbatim">F10</code> and use the arrow keys to find what you need.</p>
<p>
Emacs is mostly written in the Emacs Lisp (Elisp) language, which means that every action runs an Elisp function. Most functions are only for internal processes, but the user can call some functions (the commands) interactively. So every command is a function, but not every function is a command.</p>
<p>
The default way to activate commands is by typing <code>ALT-x</code> and then the name of the command and the enter key. For example type <code>ALT-x tetris ENTER</code> to play tetris. Don&#39;t get too distracted, just press <code class="verbatim">q</code> three times to exit the game.</p>
<p>
Typing the full function name every time is too much work for us Emacs users who seek ultimate efficiency. The <a href="https://lucidmanager.org/productivity/emacs-completion-system/">minibuffer completion</a> system helps you to find the command you seek. In standard Emacs, that would be <code>ALT-x tet TAB ENTER</code>. But that method is not on the efficiency frontier. To meet this demand, Emacs uses keyboard shortcuts.</p>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
Working with the keyboard
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<p>Emacs is a keyboard-driven system. You can use the mouse, but you;ll find that there is no need to remove your hand from the keyboard. The standard computer keyboard has five types of keys: alphanumeric / punctuation, editing, function, escape key, and modifier keys. </p>
<p>
Alphanumeric and punctuation keys activate the <code>self-insert</code> function, which adds text to the computer’s memory and displays it on the screen. The editing keys, such as arrow keys, page up and down, delete, backspace, enter and tab, do what it says on their label. These are the only keys you need to writing prose, but we like to do more than insert text.</p>
<p>
Function and multimedia keys perform specified tasks. For example, pressing <code class="verbatim">F10</code> in Emacs show the menu bar. Multimedia keys activate predefined tasks, such as increasing the screen brightness or playing music.</p>
<p>
The escape key is the most potent key on the board. Like Dorothy’s Ruby Slippers in the <em>Wizard of Oz</em>, this key gets you out of trouble by clicking it three times.</p>
<p>
These keys cover about 100 options, but more are needed to manage the thousands of possible commands you might want your computer to perform. The modifier keys on a modern PC or Apple keyboard are shift, control, alt/option and windows/command. Some programmable keyboards might have additional modifier keys, such as <code class="verbatim">Fn</code>. Modifier keys have no effect when pressed by themselves. As the name suggests, these keys modify other keys when pressed simultaneously. In Emacs vocabulary, these are called chords.</p>
<p>
Emacs documentation uses a special notation for key chords. Some of the Emacs terminology for modifier keys stems from a time when the current standard keyboard layout did not yet exist. What we now call the Alt key used to be the <em>Meta</em> key. What was the <em>Super</em> key in the olden days is now the Windows key on PC keyboards. The image below shows an old Space-Cadet keyboard with now non-existing modifier keys.</p>
<figure>
<a title= “Retro-Computing Society of Rhode Island
, CC BY-SA 3.0 &lt;https://creativecommons.org/licenses/by-sa/3.0&gt;, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:Space-cadet.jpg"><img width="512" alt="Space-cadet keyboard" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Space-cadet.jpg/512px-Space-cadet.jpg"></a>
<figcaption>
Symbolics LM-2 Lisp machine space-cadet keyboard.
</figcaption>
</figure>
<p>
Emacs documentation uses abbreviations, such as <code class="verbatim">C-a</code>, which stands for the Control and <code class="verbatim">a</code> keys, or <code class="verbatim">M-a</code>, which stands for <code class="verbatim">Alt-a</code>. Each modifier key has its own letter, as shown in the table below. The dash indicates that the keys are pressed while keeping the modifier key down. You can combine modifier keys, occasionally leading to awkward combinations, such as <code class="verbatim">C-M-S a</code> (Control, Alt and Shift <code class="verbatim">a</code>), which requires the nimble fingers of a sleight-of-hand artist to execute smoothly. The shift modifier is often not mentioned in Emacs notation, <code class="verbatim">C-M A</code> is the same as <code class="verbatim">C-M-S a</code>.</p>
<p>
The most critical chord is <code class="verbatim">C-g</code> (<code class="verbatim">keyboard-quit</code>), which cancels a partially typed command or one still running. This command can quit running functions, unlike the triple escape key.</p>
<p>
The Windows key on PC keyboards is mapped to the old Super key. Your operating system uses Chords with this key, so Emacs does not use this modifier by default. Lastly, the Hyper key is a leftover from the old keyboards.</p>
<table>
<thead>
<tr>
<th>Modifier</th>
<th>Example</th>
<th>Function</th>
</tr>
</thead>
<tbody>
<tr>
<td>Shift</td>
<td><code class="verbatim">S-8</code></td>
<td><code class="verbatim">*</code> sign on US keyboard</td>
</tr>
<tr>
<td>Control</td>
<td><code class="verbatim">C-e</code></td>
<td>End of line</td>
</tr>
<tr>
<td>Alt</td>
<td><code class="verbatim">M-d</code></td>
<td>Delete (kill) word</td>
</tr>
<tr>
<td>Windows</td>
<td><code class="verbatim">s-</code></td>
<td>Used by the operating system</td>
</tr>
<tr>
<td>Hyper</td>
<td><code class="verbatim">H-</code></td>
<td>Not mapped to regular keys</td>
</tr>
</tbody>
</table>
<p>
These modifier keys provide thousands of possible key chords to instruct Emacs. But wait, there is more. Emacs also uses prefix keys. When you press these, the system will wait for further input. For example, <code class="verbatim">C-x C-f</code> means that you first press Control and <code class="verbatim">x</code> and then Control and <code class="verbatim">f</code>, the default sequence for finding a file to open with the <code>find-file</code> function. The standard prefix keys are:</p>
<ul>
<li><code class="verbatim">C-x</code>: Mostly used for built-in Emacs commands</li>
<li><code class="verbatim">C-c</code>: Mostly used by packages</li>
<li><code class="verbatim">C-h</code>: Help functions</li>
<li><code class="verbatim">M-x</code>: Execute commands</li>
</ul>
<p>This means that the standard <a href="https://en.wikipedia.org/wiki/IBM_Common_User_Access">Common User Access</a> keyboard shortcuts for cutting text (<code class="verbatim">Ctrl+x</code>) does not work in Emacs.</p>
<p>
If you want to find out which command relates to a specific shortcut, then use <code class="verbatim">C-h k</code> and enter the key sequence to see what it is bound to for the mode you currently use. If you want to read the Emacs tutorial, the use <code class="verbatim">C-h t</code>.</p>
<p>
Two more prefix keys need mentioning. Lots of commands have alternative states, which means that they can do things in different ways. You activate an alternative state by adding <code class="verbatim">C-u</code> before the regular key-chord.</p>
<p>
Lastly, adding a number after <code class="verbatim">Control</code> or <code class="verbatim">Alt</code> repeats the next keystroke. For example <code class="verbatim">M-80 *</code> adds eighty asterisks to your text.</p>
<p>
You can change how a keyboard behaves at three levels. Some high-end keyboards are programmable and let you define the output of each key. You could map the right control key as the Hyper key so you can use it in key chords. At the second level, your operating system interprets the input from the keyboard. In Windows, <code class="verbatim">s-E</code> opens the file explorer, but you can erase this binding so that it becomes available in Emacs. Each operating system has its own methods to change keyboard maps (keymaps). Some experienced Emacs users remap the caps lock key to act as the control key to make it easier to use.</p>
<p>
Last but not least, you can define keys within Emacs itself. Some people don’t like the Emacs defaults because it requires frequent use of the <code class="verbatim">ALT</code> and <code class="verbatim">Control</code> keys. These people suggest that repetitive use of these keys causes a strain injury, the dreaded’ Emacs pinky’. Several packages, such as <a href="https://github.com/emacs-evil/evil">Evil Mode</a>, exist within the Emacs ecosystem that changes the default keybindings to a different model. <em>Emacs Writing Studio</em> follows the standard conventions.</p>
<p>
You might be dazzled by this detailed description of how Emacs uses the keyboard. Don’t worry about it for now. You will gradually understand its intricacies and eventually drive the system like a virtuoso.</p>
</div>
</div>
<div id="outline-container-headline-4" class="outline-2">
<h2 id="headline-4">
Modes
</h2>
<div id="outline-text-headline-4" class="outline-text-2">
<p>Emacs is a versatile tool that accomplishes the different tasks it is capable of through the use of major and minor modes. </p>
<p>
A major mode determines the main functionality for an open buffer. Each buffer has at least one major mode and each major mode has its own functionality and key bindings. The articles on this website mainly describe how to use <a href="https://orgmode.org/">Org mode</a>.</p>
<p>
A major mode is like opening an app within the Emacs environment. For example, Org mode provides a task management system and publication tools. Artist mode is a quirky tool in Emacs to create plain text drawings with the mouse and keyboard. Other common plain text writing major modes are plain text, Markdown and Fountain. All major modes provide specialise functions for working with these text formats. All major modes share the same underlying Emacs functionality, such as copying and pasting (killing and yanking). </p>
<p>
Minor modes provide additional functionality, such as spell-checking, text completion or displaying line numbers. A minor mode is an auxiliary program that enhances the functionality of a major mode. While each buffer has only one major mode, a buffer can have one or more active minor modes. A minor mode can also apply to the whole Emacs session.</p>
<p>
Each mode defines how a buffer displays text. For example, each heading level in Org mode has a different colour (depending on your theme). The different colours and fonts help finding your way around the text. However, how the text looks on the screen differs from how it will look when you print it or export it to a PDF of another format. This is a <em>What you See is What You Mean</em> approach, which <a href="https://lucidmanager.org/productivity/why-use-emacs/">this article explains in more detail</a>.</p>
<p>
Emacs automatically selects the relevant major mode using the extension of the file and displays it in the mode line below each buffer. Minor modes have to be enabled explicitly on top of a major mode.</p>
<p>
The available keyboard shortcuts depend on the major and minor modes that are active at the time. Each mode can have its own keymap. Some keymaps are global and apply to the whole of Emacs, other maps are specific to a mode. Some shortcuts remain the same for all modes (such as <code class="verbatim">M-u</code>, which converts a word to uppercase), unless a mode overrides this binding. Packages can change or add shortcuts, depending on the required functionality. So a shortcut like <code class="verbatim">C c c-c</code> is used by different modes for different actions, depending on the context it is used.</p>
<p>
If you are lost and like to see all possible keyboard shortcuts for the active buffer (screen), call <code class="verbatim">C-h b</code> to view a list of all available shortcuts. Note that some shortcuts can relate to a specific mode and will thus only work when the mode is active.</p>
</div>
</div>
<div id="outline-container-headline-5" class="outline-2">
<h2 id="headline-5">
Frames and Windows
</h2>
<div id="outline-text-headline-5" class="outline-text-2">
<p>When you open Emacs, the software runs within a frame. In most operating systems, a frame is called a window. To confuse matters further, you can divide an Emacs frame into windows. You can also open multiple frames on a desktop, for example, one on each monitor. </p>
<p>
By default, a frame has one window. You can duplicate the current window horizontally or vertically by pressing <code class="verbatim">C-x 2</code> or <code class="verbatim">C-x 3</code> (<code>split-window-below</code> and <code>split-window-right</code>). The <code class="verbatim">C-x 0</code> shortcut (<code>delete-window</code>) removes your current window, and <code class="verbatim">C-x 1</code> removes all other windows (<code>delete-other-windows</code>), so you work in the full frame again.</p>
<p>
When splitting a window, the same buffer can appear on both sides, each with point at a different location in the text. Using <code class="verbatim">M-x</code> <code>follow-mode</code> flows the text so it becomes like a two-column document. This function toggles the follow function as a minor mode, so you can switch it on and off with the same function.</p>
<p>
To move between windows, use the <code class="verbatim">C-x o</code> shortcut (<code>other-window</code>).</p>
<p>
The bottom of each window has a mode line, and the bottom of the frame contains the mini buffer. The mode line provides information, such as the open file name, current line number and other helpful information. The mini buffer is where Emacs provides feedback or seeks your input.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/emacs-frame-components.jpg" alt="Emacs frame with three windows." title="Emacs frame with three windows."/>
<figcaption>
Emacs frame with three windows.
</figcaption>
</figure>
</div>
</div>
<div id="outline-container-headline-6" class="outline-2">
<h2 id="headline-6">
Buffers
</h2>
<div id="outline-text-headline-6" class="outline-text-2">
<p>A buffer holds the text that is displayed in a window. Buffers can also contain a user interface or output from functions. The name of the buffer or its associated file is shown in the status bar at the bottom of the window. Special buffers, such as <code class="verbatim">*Messages*</code> start with an asterisk. This buffer shows the output of any commands you run.</p>
<p>
You can have multiple buffers open at the same time so that you can easily switch between buffers. Emacs is highly stable and some Emacs users have hundreds of open buffers as they rarely need to restart the program. The <code class="verbatim">C-x b</code> shortcut (<code>switch-to-buffer</code>) lets you select another buffer to move to.</p>
<p>
With the <code class="verbatim">C-x left</code> and <code class="verbatim">C-x right</code> key sequences (<code>previous-buffer</code> and <code>next-buffer</code>), you can move between buffers in chronological activation order.</p>
</div>
</div>
<div id="outline-container-headline-7" class="outline-2">
<h2 id="headline-7">
Files
</h2>
<div id="outline-text-headline-7" class="outline-text-2">
<p>Most buffers, except those surrounded by an asterisk, are linked to a file. Like office software, you are working on the version in memory (the buffer), and the previous version is on disk (the file). Emacs works precisely the same way.</p>
<p>
Opening files in Emacs is called <em>visiting a file</em>. You first need to find it with the <code>find-file</code> function (<code class="verbatim">C-x C-f</code>) to visit a file.  Emacs will open the file and display the contents in the buffer. Emacs will create a new file when you type a name that does not yet exist. If you open a directory, Emacs will show the contents of that directory in <a href="https://lucidmanager.org/productivity/manage-files-with-emacs/">the file manager</a>.</p>
<p>
Emacs will ask you to nominate a file or folder in the mini buffer. When you hit the <code class="verbatim">TAB</code> button twice, all the available files and folders appear in the mini buffer. To complete the file name, start typing the filename and hit <code class="verbatim">TAB</code> again.</p>
<p>
After you complete your edits, <code class="verbatim">C-x C-s</code> (<code>save-buffer</code>) saves your buffer. To save all open buffers, press <code class="verbatim">C-x s</code> (<code>save-some-buffers</code>) and follow the prompts in the minibuffer at the bottom of the screen. To save a buffer under a new name, you can use <code class="verbatim">C-x C-w</code>.</p>
<table>
<thead>
<tr>
<th>Keystroke</th>
<th>Function</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code class="verbatim">C-x C-f</code></td>
<td><code>find-file</code></td>
<td>Find (open) a file</td>
</tr>
<tr>
<td><code class="verbatim">C-x C-s</code></td>
<td><code>save-buffer</code></td>
<td>Save the current buffer to its file</td>
</tr>
<tr>
<td><code class="verbatim">C-x s</code></td>
<td><code>save-some-buffers</code></td>
<td>Save all open buffers (with confirmation)</td>
</tr>
<tr>
<td><code class="verbatim">C-x C-w</code></td>
<td><code>write-file</code></td>
<td>Write current buffer to a file (Save as)</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-headline-8" class="outline-2">
<h2 id="headline-8">
Exiting Emacs
</h2>
<div id="outline-text-headline-8" class="outline-text-2">
<p>After your first practice round, it is time to close (kill) Emacs. The <code class="verbatim">C-x C-c</code> kills the Emacs session, checking for unsaved buffers first (<code>save-buffers-kill-terminal</code>).</p>
</div>
</div>
<div id="outline-container-headline-9" class="outline-2">
<h2 id="headline-9">
Learn more
</h2>
<div id="outline-text-headline-9" class="outline-text-2">
<p>This article only discussed the basic principles of using Emacs. If you like to know more, then I encourage you to follow the built-in Emacs tutorial, which you activate with <code class="verbatim">C-h t</code>.</p>
<p>
There are many great YouTube videos that explain how to use Emacs. The video below by David Williamson provides a detailed introduction into how to use Emacs. The blog posts and YouTube videos by <a href="https://protesilaos.com/">Protesilaos Stavrou</a> also provide useful insights.</p>
<figure>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/48JlgiBpw_I?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<figcaption>
The Absolute Beginner&#39;s Guide to Emacs (System Crafters).
</figcaption>
</figure>
</div>
</div>
<div id="outline-container-headline-10" class="outline-2">
<h2 id="headline-10">
Emacs Writing Studio
</h2>
<div id="outline-text-headline-10" class="outline-text-2">
<p>The <a href="https://lucidmanager.org/tags/emacs/">Emacs Writing Studio</a> consists of a series articles and a configuration to help you publish articles, books, movie and theatre scripts and websites.</p>
<p>
<a href = "https://github.com/pprevos/emacs-writing-studio/" target="_blank"
   title="Download emacs-writing-studio from GitHub"
   alt="Download emacs-writing-studio from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span style="font-family: monospace">emacs-writing-studio</span>
  </button>
</a>

</p>
<p>
Emacs is a malleable system, so everybody will have their personal preferences. Any article on how to use Emacs is thus opinionated. If you have a different way of doing things, please complete the <a href="https://lucidmanager.org/contact/">contact form</a> to send me an email or contact me on social media.</p>
<p>
You can do a lot with Emacs without any configuration, but you will need to configure the system to make it behave how you want it to. The next article introduces the principles of <a href="https://lucidmanager.org/productivity/configure-emacs/">configuring Emacs</a> to convert it into your own writing studio.</p>
</div>
</div>

      