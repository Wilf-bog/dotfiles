
         
         <p><code class="language-plaintext highlighter-rouge">beframe</code> enables a frame-oriented Emacs workflow where each frame has
access to the list of buffers visited therein.  In the interest of
brevity, we call buffers that belong to frames “beframed”.</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">beframe</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/beframe">https://protesilaos.com/emacs/beframe</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/beframe-changelog">https://protesilaos.com/emacs/beframe-changelog</a></li>
  <li>Git repo on SourceHut: <a href="https://git.sr.ht/~protesilaos/beframe">https://git.sr.ht/~protesilaos/beframe</a>
    <ul>
      <li>Mirrors:
        <ul>
          <li>GitHub: <a href="https://github.com/protesilaos/beframe">https://github.com/protesilaos/beframe</a></li>
          <li>GitLab: <a href="https://gitlab.com/protesilaos/beframe">https://gitlab.com/protesilaos/beframe</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/general-issues">https://lists.sr.ht/~protesilaos/general-issues</a></li>
  <li>Video demo: <a href="https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/">https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/</a></li>
  <li>Backronym: Buffers Encapsulated in Frames Realise Advanced
Management of Emacs.</li>
</ul>

<p>Below are the release notes</p>

<hr />

<h2>Use more descriptive names for assume/unassume commands</h2>

<p>Beframe limits the buffer list to buffers that are visited in the
current frame.  I provide commands to assume (add) or unassume
(remove) buffers from other frames, making for a powerful and flexible
workflow:</p>

<ul>
  <li>
    <p><strong>In bulk:</strong> Assume/unassume the (i) entire buffer list of a frame, or
the (ii) consolidated buffer list of all frames.</p>
  </li>
  <li>
    <p><strong>Selectively:</strong> Use minibuffer completion to compile a list of
buffers to assume/unassume (iii) from the given frame, or (iv)
buffers from the consolidated buffer list.</p>
  </li>
</ul>

<p>The commands that operate selectively are renamed to better describe
what they do.  We thus have:</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col class="org-left" />

<col class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Deprecated name</th>
<th scope="col" class="org-left">New name</th>
</tr>
</thead>

<tbody>
<tr>
<td class="org-left">beframe-assume-buffers</td>
<td class="org-left">beframe-assume-frame-buffers-selectively</td>
</tr>


<tr>
<td class="org-left">beframe-assume-buffers-all-frames</td>
<td class="org-left">beframe-assume-buffers-selectively-all-frames</td>
</tr>


<tr>
<td class="org-left">beframe-unassume-buffers</td>
<td class="org-left">beframe-unassume-current-frame-buffers-selectively</td>
</tr>
</tbody>
</table>

<p>To avoid potential confusion, the following command aliases are
discontinued:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">beframe-add-buffers</code></li>
  <li><code class="language-plaintext highlighter-rouge">beframe-remove-buffers</code></li>
  <li><code class="language-plaintext highlighter-rouge">beframe-add-frame-buffers</code></li>
  <li><code class="language-plaintext highlighter-rouge">beframe-remove-frame-buffers</code></li>
</ul>

<h2>Provide the <code class="language-plaintext highlighter-rouge">beframe-prefix-map</code></h2>

<p>This is a keymap that binds the Beframe commands to recommended keys.
As with all Emacs key bindings, those are configurable.</p>

<p>I call it a “prefix” keymap because it is not bound anywhere and
cannot be used by default.  The user must explicitly bind it to a key,
which will be treated as a prefix key.  For example:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">"C-c b"</span><span class="p">)</span> <span class="nv">beframe-prefix-map</span><span class="p">)</span>
</code></pre></div></div>

<p>With the above code, <code class="language-plaintext highlighter-rouge">C-c b</code> becomes the prefix key that invokes
Beframe commands.  Type <code class="language-plaintext highlighter-rouge">C-c b C-h</code> to show the available key
bindings (by default <code class="language-plaintext highlighter-rouge">C-h</code> as a suffix to an incomplete key sequence
produces a Help buffer that links to all the available bindings).</p>

<p>The <code class="language-plaintext highlighter-rouge">beframe-prefix-map</code> and <code class="language-plaintext highlighter-rouge">beframe-mode</code> are used independent of
each other.</p>

<h2>Miscellaneous</h2>

<ul>
  <li>Simplify how <code class="language-plaintext highlighter-rouge">beframe-rename-function</code> is added by the
<code class="language-plaintext highlighter-rouge">beframe-mode</code>.</li>
  <li>Refine the application of <code class="language-plaintext highlighter-rouge">beframe-create-frame-scratch-buffer</code> by
the <code class="language-plaintext highlighter-rouge">beframe-mode</code>.</li>
  <li>Tweak the <code class="language-plaintext highlighter-rouge">beframe-buffer-sort-visibility</code> function to be consistent
with the style of <code class="language-plaintext highlighter-rouge">beframe.el</code>.</li>
  <li>Rewrite parts of the manual to reference the aforementioned.</li>
</ul>
        
      