
         
         <p>The <code class="language-plaintext highlighter-rouge">ef-themes</code> is a collection of light and dark themes for GNU Emacs
whose goal is to provide colourful (“pretty”) yet legible options for
users who want something with a bit more flair than the <code class="language-plaintext highlighter-rouge">modus-themes</code>
(also designed by me).</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">ef-themes</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/ef-themes">https://protesilaos.com/emacs/ef-themes</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/ef-themes-changelog">https://protesilaos.com/emacs/ef-themes-changelog</a></li>
  <li>Sample pictures: <a href="https://protesilaos.com/emacs/ef-themes-pictures">https://protesilaos.com/emacs/ef-themes-pictures</a></li>
  <li>Git repo on SourceHut: <a href="https://git.sr.ht/~protesilaos/ef-themes">https://git.sr.ht/~protesilaos/ef-themes</a>
    <ul>
      <li>Mirrors:
        <ul>
          <li>GitHub: <a href="https://github.com/protesilaos/ef-themes">https://github.com/protesilaos/ef-themes</a></li>
          <li>GitLab: <a href="https://gitlab.com/protesilaos/ef-themes">https://gitlab.com/protesilaos/ef-themes</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/ef-themes">https://lists.sr.ht/~protesilaos/ef-themes</a></li>
  <li>Backronym: Eclectic Fashion in Themes Hides Exaggerated Markings,
Embellishments, and Sparkles.</li>
</ul>

<p>Below are the release notes.</p>

<hr />

<p>This is the first major release of the <code class="language-plaintext highlighter-rouge">ef-themes</code>.  The project is in
a stable state.  I continue to make refinements to it, especially for
the sort of details that are hard to spot.</p>

<h2>Try the two new themes</h2>

<p>The <code class="language-plaintext highlighter-rouge">ef-kassio</code> and <code class="language-plaintext highlighter-rouge">ef-symbiosis</code> provide yet more stylistic
variation to an already wide collection:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ef-kassio</code> is a light theme that harmoniously combines blue and red
hues in an overall design that feels earthly and measured.  Its name
is a cryptic reference to a place in Greece.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ef-symbiosis</code> is a dark theme that balances contrasting cool and
warm hues.  Deep and lighter browns blend with vivid greens and
neutral blues.  The name of the theme is a reference to the
coexistence of hues that could belong to two separate themes, yet
feel natural in tandem.</p>
  </li>
</ul>

<p>Picture of all the themes: <a href="https://protesilaos.com/emacs/ef-themes-pictures">https://protesilaos.com/emacs/ef-themes-pictures</a>.</p>

<h2>Commands to switch between only dark or light themes</h2>

<p>The <code class="language-plaintext highlighter-rouge">ef-themes-select-dark</code> and <code class="language-plaintext highlighter-rouge">ef-themes-select-light</code> provide
minibuffer completion that limits the candidates to the respective
subset.  This makes it easier for users to discover another theme they
may like.</p>

<h2>Helpful completion annotations</h2>

<p>All Ef commands that use minibuffer completion now produce annotations
that describe in a few words what each theme is about.  For example,
<code class="language-plaintext highlighter-rouge">ef-deuteranopia-dark</code> is presented as a “Legible dark theme,
optimized for red-green color deficiency”.</p>

<h2>Palette overrides</h2>

<p>All variables that allow the user to override named colours and
semantic colour mappings are now declared as user options.
Concretely, these can now be discovered from the Custom interface.</p>

<p>Palette overrides are not new to this version, though they are
henceforth considered stable for widespread use.  Consult the manual
for how to make use of them and how to preview the entries of any
given theme palette.</p>

<p>To ensure consistency, some symbols in the palette have been renamed.
For example, graph colours follow the pattern <code class="language-plaintext highlighter-rouge">bg-graph-red-0</code> instead
of <code class="language-plaintext highlighter-rouge">red-graph-0-bg</code>.  Same for intensely coloured backgrounds, which
are now named like <code class="language-plaintext highlighter-rouge">bg-red-intense</code> rather than <code class="language-plaintext highlighter-rouge">bg-red</code>.</p>

<h2>Improved graph colours</h2>

<p>All themes have a refined palette subset for graph-related purposes.
These are encountered, for example, in the <code class="language-plaintext highlighter-rouge">org-habit</code> consistency
graph.  The differences are subtle, yet important in context to
improve the usability of the given interfaces.</p>

<h2>Improved graph colours for deuteranopia, tritanopia</h2>

<p>I also recalibrated the graph-related colours for the deuteranopia-
and tritanopia- optimized themes.  This is related to the above, but I
am writing it separately as it has its own requirements.</p>

<p>The default design of <code class="language-plaintext highlighter-rouge">org-habit</code> expects a colour coding of red,
yellow, green, blue.  This cannot work for users with either red-green
or blue-yellow colour deficiency.  The relevant Ef themes have long
accounted for this requirement, though they now are even better at it.</p>

<h2>Support for new faces and changes to existing ones</h2>

<ul>
  <li>
    <p>Newly supported packages are: <code class="language-plaintext highlighter-rouge">jinx</code>, <code class="language-plaintext highlighter-rouge">rst-mode</code>, <code class="language-plaintext highlighter-rouge">vundo</code>, <code class="language-plaintext highlighter-rouge">vterm</code>.
Consult the manual for the full list of supported packages.  Some
packages are implicitly covered, because they have reasonable
defaults, such as my <code class="language-plaintext highlighter-rouge">sxhkdrc-mode</code>.</p>
  </li>
  <li>
    <p>The built-in <code class="language-plaintext highlighter-rouge">menu</code>, <code class="language-plaintext highlighter-rouge">scroll-bar</code>, and <code class="language-plaintext highlighter-rouge">tool-bar</code> faces are now
covered.  These only come into effect in certain scenaria, such as
an Emacs build done with the Lucid toolkit or a text session that
involves usage of the menu bar.</p>
  </li>
  <li>
    <p>The built-in <code class="language-plaintext highlighter-rouge">flymake</code> linter has several new faces in Emacs 29 and
Emacs 30, which are now fully supported by the themes and styled in
the interest of harmony (<code class="language-plaintext highlighter-rouge">flymake</code> is available from GNU ELPA for
those who want to benefit from the latest features in older versions
of Emacs).</p>
  </li>
  <li>
    <p>The built-in <code class="language-plaintext highlighter-rouge">proced</code> has several new faces.  All are supported,
adding optional extra colour to those buffers without overdoing it.</p>
  </li>
  <li>
    <p>Org mode has a new <code class="language-plaintext highlighter-rouge">org-agenda-calendar-daterange</code> face.  It is
covered and there also are semantic colour mappings for date ranges.</p>
  </li>
  <li>
    <p>Clickable buttons, such as in Custom buffers, are now shown with a
three-dimensional effect.  The flat style creates ambiguity between
the button and the text fields.  This happens, for example, with
<code class="language-plaintext highlighter-rouge">M-x customize-variable</code> for <code class="language-plaintext highlighter-rouge">org-capture-templates</code> which has lots
of button and text field combinations.  The added sense of depth
helps with the usability of these buttons because it makes them
unambiguous.</p>
  </li>
  <li>
    <p>All relevant faces correspond to the semantic colour mappings for
<code class="language-plaintext highlighter-rouge">prose-code</code> and <code class="language-plaintext highlighter-rouge">prose-verbatim</code> (useful for palette overrides).</p>
  </li>
</ul>
        
      